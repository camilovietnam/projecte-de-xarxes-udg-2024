
version: '3.9'

networks:
  kong-net:
    external: false

services:
  # # # # # # # # # # # # # #
  nginx:
  # # # # # # # # # # # # # #
    image: nginx
    networks:
      - kong-net

  postgres:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: u1062049
      POSTGRES_PASSWORD: projecte-de-xarxes
      # POSTGRES_DB: projecte-de-xarxes
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql  # Mount SQL file into the container
    ports:
      - 5432:5432
    networks:
      - kong-net

  # # # # # # # # # # # # # #
  echo-go1:
  # # # # # # # # # # # # # #
    image: u1062049/echo-go:latest
    environment:
      # - SERVER_NAME=SERVER-{{.Task.Name}}
      - SERVER_NAME=SERVER-1
    # ports:
    #   - "8080-8082:8080"
    # this will replicate the service, and docker will take care of load-balancing it
    # automatically
    # deploy:
    #   replicas: 3
    networks:
      - kong-net

  # # # # # # # # # # # # # #
  echo-go2:
  # # # # # # # # # # # # # #
    image: u1062049/echo-go:latest
    environment:
      - SERVER_NAME=SERVER-2
    networks:
      - kong-net

  # # # # # # # # # # # # # #
  echo-go3:
  # # # # # # # # # # # # # #
    image: u1062049/echo-go:latest
    environment:
      - SERVER_NAME=SERVER-3
    networks:
      - kong-net

  kong:
    image: kong:3.6.1
    networks:
      - kong-net
    volumes:
      - ${PWD}/config/kong:/kong/declarative
    environment:
      - KONG_DATABASE=off
      - KONG_DECLARATIVE_CONFIG=/kong/declarative/kong.yaml
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl 
      - KONG_ADMIN_GUI_URL=http://localhost:8002
    ports:
      - 8000:8000
      - 8443:8443
      - 8001:8001
      - 8444:8444


#version: '3'
#services:
#  grafana:
#    image: grafana/grafana:latest
#    ports:
#      - "3000:3000"
